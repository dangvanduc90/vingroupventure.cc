name: Deploy

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}
  PATH_COMPOSER: /tmp/vingroupventure.cc
  
jobs:
  deploy-docker:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{sha}}

      - name: Login to image repository
        if: github.ref_type == 'tag'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: ${{ github.ref_type == 'tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  pull:
    environment: production
    runs-on: self-hosted
    steps:
      - name: Pull and run
        uses: appleboy/ssh-action@v0.1.10
        env:
          PATH_REPO: "/data/repo/vingroupventure.cc"
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          port: 22
          debug: false
          envs: PATH_REPO
          script: |
            cd $PATH_REPO
            git checkout ${{ github.head_ref || github.ref_name }}
            git fetch --all
            git reset --hard origin/${{ github.head_ref || github.ref_name }}
            git pull origin ${{ github.head_ref || github.ref_name }}
            cp docker-compose/docker-compose-prod.yml ${{ env.PATH_COMPOSER }}/docker-compose.yml
            sed -i "s~IMAGE_TAG~${{ env.DOCKER_IMAGE }}~g" ${{ env.PATH_COMPOSER }}/docker-compose.yml
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cd ${{ env.PATH_COMPOSER }} && docker compose up -d
